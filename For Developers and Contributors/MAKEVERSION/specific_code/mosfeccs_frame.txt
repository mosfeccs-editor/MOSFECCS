<!-- START mv FRAME -->
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, user-scalable=no" />
    
    <title>MOSFECCS_v6_SVG_DEV_210218(build 210218.1)</title>

<!-- script1 -->
    <script type="text/javascript">
           "use strict";
//GLOBAL
      var helpWindow;
      // call of the drawCanvas function upon page-load 
      if(window.addEventListener){
        window.addEventListener("unload", closeHelp, false);
      }

      function closeHelp() {
        if ((helpWindow) && (!helpWindow.closed)) {
          helpWindow.close();
        }
      }

      var svgWindow;
      // call of the drawCanvas function upon page-load 
      if(window.addEventListener){
        window.addEventListener("unload", closeSVG, false);
      }

      function closeSVG() {
        if ((svgWindow) && (!svgWindow.closed)) {
          svgWindow.close();
        }
      }
      
//parameter dependent style sheet and variable pad
      function getUrlParam(parameter, defaultvalue){
          var urlparameter = defaultvalue;
          if(window.location.href.indexOf(parameter) > -1) {
              urlparameter = getUrlVars()[parameter];
          }
          return urlparameter;
      }
      
      function getUrlVars() {
          var vars = {};
          window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
              vars[key] = value;
          });
          return vars;
      }

      var device = getUrlParam('device','std');
      
      var arrows = getUrlParam('arrows','yes');

      var pad = false;
      
      var fileref=document.createElement("link");
      
      fileref.setAttribute("rel", "stylesheet");
      fileref.setAttribute("type", "text/css");
      fileref.setAttribute("media", "screen");
      if (device === 'std') {
        fileref.setAttribute("href", "std_full_rs.css");
        pad = (screen.width > 1390)? false:true; // for automatic tablet recognition
      } else if (device === 'tablet') {
        pad = true;
        fileref.setAttribute("href", "tablet_full_rs.css");
      } else if (device === 'desktop') {
        fileref.setAttribute("href", "desktop_full_rs.css");
        pad = false;
      }        

      if (typeof fileref!="undefined") {
          document.getElementsByTagName("head")[0].appendChild(fileref);
      }
      
      const uag = navigator.userAgent;
      var app = false;
      if (/ethmoodle|MoodleMobile/.test(uag)) {
        app = true;
      }
      
      const phone = (Math.min(screen.width,screen.height) < 760)? true:false;
      
      if (phone && !app) {
          document.querySelector("meta[name=viewport]").setAttribute(
          'content', 
          'width=device-width, initial-scale=0.6, minimum-scale=0.6, maximum-scale=0.6, user-scalable=0');
      }

    </script>
<!-- end script1 -->
  </head>
  
  <body id="body" onunload="closeHelp()">
    <div id="container">
      <canvas id="bgc" height="640" width="590" class="canright" style="background-color:white">
        Ihr Browser kann diese Graphik nicht darstellen
      </canvas>
      <canvas id="sho" height="640" width="590" class="canright" style="background-color:transparent">
        Ihr Browser kann diese Graphik nicht darstellen
      </canvas>
      <canvas id="pdc" height="640" width="590" class="canright" style="background-color:transparent">
        Ihr Browser kann diese Graphik nicht darstellen
      </canvas>
      <canvas id="igc" height="640" width="590" class="canright" style="background-color:transparent">
        Ihr Browser kann diese Graphik nicht darstellen
      </canvas>
      <canvas id="can" height="640" width="590" class="canright" style="background-color:transparent">
        Ihr Browser kann diese Graphik nicht darstellen
      </canvas>
      <div id="buttonregion" class="butreg">
        <div id="butr1" class="butrow" display="inline-block">
          <input type="button" id="clear" class="but" value="ERASE ALL" style="visibility:hidden">
          <input type="button" id="undo" class="but" value="UNDO" style="visibility:hidden">
          <input type="button" id="smiles" class="but" value="get SMILES" style="visibility:hidden">
          <input type="button" id="sm2str" class="but" value="put SMILES" style="visibility:hidden">
          <input type="button" id="help" class="but" value="HELP" style="visibility:hidden">
          <img id="shift" src="shift.png" class="shift" width="35" height="35"/>
          <img id="alt" src="alt.png" class="alt" width="35" height="35"/>
        </div>
      </div>
      <div id="smilesbox">
        <span id="smhead">SMILES code:</span><br /><br />
        <textarea id='smitxa' cols='42' rows='2' readonly>smiles</textarea><br /><br />
        <button type='submit' id='smilesok'>Close</button>
      </div>
      <div id="xbox">
        <span id="xheader">ENTER ELEMENT SYMBOL:</span><br /><br />
        <input type='text' name='xtxt' id='xtxa'><br /><br />
        <button type='submit' id='xok'>OK</button>
      </div>
      <div id="abox">
        <span id="aheader">Annotate Reaction:</span><br /><br />
        above:<input type='text' name='atxt' id='atxa'><br /><br />
        below:<input type='text' name='btxt' id='btxa'><br /><br />
        <button type='submit' id='aok'>OK</button>
      </div>
      <div id="smixbox">
        <span id="smixheader">ENTER SMILES CODE</span><br /><br />
        <input type='text' name='smixtxt' id='smixtxa'><br /><br />
        <div class='smixbutrow'>
          <input type='button' id='smixcancel' class='smixbut' value='Cancel'>
          <input type='button' id='smixadd' class='smixbut' value='ADD'>
          <button type='submit' id='smixok' class='smixbut'>REPLACE</button>
        </div>
      </div>
    </div>
    
<!-- END mv FRAME -->    
